apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "twilight.fullname" . }}
  labels:
{{ include "twilight.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "twilight.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "twilight.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: media-config
      containers:
        - name: twilight
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/usr/bin/docker-entrypoint", "twilight" ]
          env:
          - name: MINIO
            value: "http://gcs-proxy:9000"
          - name: CONFIG_ENV
            value: production
          volumeMounts:
          - name: config
            mountPath: "/mnt/config"
            readOnly: true
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 60 # don't recreate until after 60s+
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

{{- $global := . }}
{{- range $name, $serviceConfig := .Values.services }}
{{- $fullname := include "service.fullname" (dict "Name" $name "Global" $global) }}
{{- $defaultImageRepository := printf "%s%s" "jaredallard/triton-" ($serviceConfig.imageName | default $name) }}
{{- $config  := default (index (default $global.Values.config dict) $name) dict }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/managed-by: {{ $global.Release.Service }}
    helm.sh/chart: {{ $global.Chart.Name }}{{ "-" }}{{ $global.Chart.Version }}
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ $global.Release.Name }}
spec:
  replicas: {{ $config.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ $global.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ $global.Release.Name }}
    spec:
      {{- if eq (toString $serviceConfig.useServiceAccount) "true" }}
      serviceAccountName: {{ $fullname }}
      {{- end }}
      volumes:
      {{- include "triton.includeConfig" . | nindent 6 }}
      {{- with $serviceConfig.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ $name }}
          image: {{ $config.imageRepository | default $defaultImageRepository }}{{ ":" }}{{ $config.imageTag | default "prod" }}
          imagePullPolicy: {{ $config.imagePullPolicy | default "IfNotPresent" }}
          command: {{ $config.command | default (list "/usr/bin/docker-entrypoint" $name) }}
          env:
          {{- $postgres := include "service.fullname" (dict "Name" "postgres" "Global" $global) }}
          {{- $rabbitmq := include "service.fullname" (dict "Name" "rabbitmq" "Global" $global) }}
          {{- $s3       := $global.Values.endpoints.s3Endpoint | default (printf "http://%s:9000" (include "service.fullname" (dict "Name" "minio" "Global" $global))) }}
          - name: NODE_ENV
            value: {{ $config.environment | default "production" }}
          - name: S3_ENDPOINT
            value: {{ $s3 }}
          {{- if ne (toString $global.Values.trello.enabled) "true" }}
          - name: NO_TRELLO
            value: '1'
          {{- end }}
          - name: S3_ACCESS_KEY
            value: {{ $global.Values.s3.accessKey }}
          - name: S3_SECRET_KEY
            value: {{ $global.Values.s3.secretKey }}
          {{- /* DEPRECATED */}}
          - name: POSTGRES
            value: {{ $postgres }}
          {{- /* DEPRECATED */}}
          - name: IDENTIFIER_POSTGRES_ENDPOINT
            value: {{ $postgres }}
          - name: POSTGRES_ENDPOINT
            value: {{ $postgres }}
          - name: RABBITMQ
            value: {{ $rabbitmq }}
          {{- /* DEPRECATED */}}
          - name: MINIO
            value: {{ $rabbitmq }}
          {{- if (and (ne (toString $serviceConfig.livenessProbe) "false") (ne (len ($serviceConfig.ports | default list)) 0)) }}
          livenessProbe:
            httpGet:
              path: {{ $serviceConfig.livenessProbePath | default "/health" }}
              port: {{ $serviceConfig.livenessProbePort | default "http" }}
            initialDelaySeconds: 60 # don't recreate until after 60s+
          {{- end }}
          {{- if (and (ne (toString $serviceConfig.readinessProbe) "false") (ne (len ($serviceConfig.ports | default list)) 0)) }}
          readinessProbe:
            httpGet:
              path: {{ $serviceConfig.readinessProbePath | default "/health" }}
              port: {{ $serviceConfig.readinessProbePort | default "http" }}
          {{- end }}
          volumeMounts:
          {{- include "triton.includeConfigMount" . | nindent 10 }}
          {{- with $serviceConfig.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with $serviceConfig.ports }}
          ports:
          {{- range $_, $port := . }}
          {{- /* TODO: Add more helpful error messages */}}
          - name: {{ $port.name | required "Missing port name"}}
            containerPort: {{ $port.containerPort | required "Missing containerPort" }}
            protocol: {{ $port.protocol | default "TCP" }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml $config.resources | nindent 12 }}
    {{- with $config.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $config.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $config.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
{{- $name       := "centers" }}
{{- $fullname   := include "service.fullname" (dict "Name" $name "Global" .) }}
{{- $config     := index  .Values.services $name | default dict }}
{{- $jfConfig   := $config.jellyfin | default dict }}
{{- $plexConfig := $config.plex | default dict }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}{{ "-" }}{{ .Chart.Version }}
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ $config.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
      - name: service-configs
        persistentVolumeClaim:
          claimName: media-config
      - name: triton-config
        secret:
          defaultMode: 420
          secretName: media-config

      # Host mounts
      - name: media
        emptyDir: {}
      - name: fuse
        hostPath:
          path: /dev/fuse

      # Temp Dirs
      - name: transcoding
        emptyDir: {}
      containers:
{{include "includeJaegerContainer" . | indent 8 }}
        - name: plex
          image: linuxserver/plex
          imagePullPolicy: {{ $plexConfig.imagePullPolicy }}
          env:
          - name: TZ
            value: America/Los_Angeles
          - name: PUID
            value: "999"
          - name: PGID
            value: "999"
          livenessProbe:
            httpGet:
              path: /
              port: 8096
              scheme: HTTP
            initialDelaySeconds: 60
          ports:
          - containerPort: 32400
            name: plex-http
            protocol: TCP
          - containerPort: 32400
            name: plex-http-udp
            protocol: UDP
          - containerPort: 32469
            protocol: TCP
          - containerPort: 32469
            protocol: UDP
          - containerPort: 5353
            protocol: UDP
          - containerPort: 1900
            protocol: UDP
          readinessProbe:
            httpGet:
              path: /
              port: 8096
              scheme: HTTP
          resources:
{{ toYaml $plexConfig.resources | indent 12 }}
          volumeMounts:
          - name: service-configs
            mountPath: /config
            subPath: plex
          - name: media
            mountPath: /data/media
          - name: transcoding
            mountPath: /transcoding
        # s3-mounter
        - name: s3-mounter
          image: jaredallard/triton-s3-mounter:v2
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            privileged: true
          env:
{{- if .Values.s3.useCache }}
          - name: GOOFYS_CACHE_ENABLED
            value: "true"
          - name: GOOFYS_CHEAP
            value: "true"
{{- end }}
          - name: MOUNT_DIR
            value: /data/media
          - name: BUCKET_NAME
            value: triton-media
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: s3-credentials
                key: accesskey
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: s3-credentials
                key: secretkey
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: s3-credentials
                key: endpoint
          volumeMounts:
          - name: fuse
            mountPath: /dev/fuse
          - name: media
            mountPropagation: Bidirectional
            mountPath: /data/media
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
        # Jellyfin
        - name: jellyfin
          image: linuxserver/jellyfin
          imagePullPolicy: {{ $jfConfig.imagePullPolicy }}
          env:
          - name: TZ
            value: America/Los_Angeles
          - name: PUID
            value: "999"
          - name: PGID
            value: "999"
          volumeMounts:
          - name: media
            mountPath: /data/media
          - name: service-configs
            subPath: emby
            mountPath: /config
          ports:
          - name: http
            containerPort: 8096
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8096
            initialDelaySeconds: 60 # don't recreate until after 60s+
          readinessProbe:
            httpGet:
              path: /
              port: 8096
          resources:
{{ toYaml $jfConfig.resources | indent 12 }}
    {{- with $config.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $config.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $config.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
